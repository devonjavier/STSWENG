// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')
const chrome = require('selenium-webdriver/chrome')

describe('CheckStatusInvalid', function() {
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome')
    .setChromeOptions(new chrome.Options().setBinaryPath('/usr/bin/google-chrome'))
    .setChromeService(new chrome.ServiceBuilder('__tests__/chromedriver.exe'))
    .build()
    vars = {}
  })
  afterEach(async function() {
    if (driver){
      await driver.quit();
    }
  })
  it('CheckStatusInvalid', async function() {
    await driver.get("https://stsweng-eight.vercel.app/")
    await driver.manage().window().maximize()
    await driver.sleep(2000)
    await driver.findElement(By.linkText("Check Status")).click()
    await driver.sleep(2000)
    await driver.findElement(By.css(".text-center")).click()
    await driver.sleep(500)
    await driver.findElement(By.css(".text-center")).sendKeys("10028")
    await driver.sleep(2000)
    await driver.findElement(By.css(".rounded-3xl")).click()
    await driver.sleep(2000)
    await driver.findElement(By.css(".lg\\3Aw\\=\\[480px\\]")).click()
    await driver.sleep(2000)
    await driver.findElement(By.css(".lg\\3Aw\\=\\[480px\\]")).sendKeys("1234")
    await driver.findElement(By.css(".bg-cusBlue:nth-child(8)")).click()
    await driver.sleep(2000)
    const alert = await driver.switchTo().alert();
    const alertText = await alert.getText();
    assert(alertText === "Incorrect password. Please try again."); // Ensure this matches exactly
    await driver.sleep(2000);
    await alert.accept();

  }) 
})